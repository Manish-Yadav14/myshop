// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

enum UserRole {
  ADMIN
  CUSTOMER
}

model User {
  id        String     @id @default(uuid())
  username  String
  email     String     @unique
  password  String
  role      UserRole   @default(CUSTOMER) // Default role is CUSTOMER
  createdAt DateTime   @default(now())
  cartItems CartItem[]
}

model Product {
  id          String   @id @default(uuid())
  name        String
  description String
  price       Float
  stock       Int      @default(1000)
  images      String[] @default([])
  createdAt DateTime   @default(now())
  categoryId  Int      // Foreign key for the relationship with Category
  category    Category @relation(fields: [categoryId], references: [id]) // Specify the foreign key field
  cartItems  CartItem[]
}

model Category {
  id          Int       @id @default(autoincrement())
  name        String
  description String
  products Product[]
}

model CartItem {
  id        Int      @id @default(autoincrement())
  userId    String
  productId String
  quantity  Int
  user      User     @relation(fields: [userId], references: [id])
  product   Product  @relation(fields: [productId], references: [id])
  
   // Composite unique constraint on userId and productId
  @@unique([userId, productId])  // This ensures a user can't add the same product twice
}
